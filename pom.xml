<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.spread</groupId>
  <artifactId>spread</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>
   <properties>
    <org.springframework-version>4.3.3.RELEASE</org.springframework-version>
    <spring.security.version>4.0.2.RELEASE</spring.security.version>
    <quartz.version>2.2.1</quartz.version>
    <release-train>Hopper-SR4</release-train>
    <hibernate.version>4.3.11.Final</hibernate.version>
  </properties>
  <!-- Due to different inception dates of individual Spring Data modules, most of them carry different major and minor version numbers. The easiest way to find compatible ones is by relying on the Spring Data Release Train BOM we ship with the compatible versions defined -->
  <dependencyManagement>
	  <dependencies>
	    <dependency>
	      <groupId>org.springframework.data</groupId>
	      <artifactId>spring-data-releasetrain</artifactId>
	      <version>${release-train}</version>
	      <scope>import</scope>
	      <type>pom</type>
	    </dependency>
	  </dependencies>
  </dependencyManagement>
  <dependencies>
  
		<!-- JUnit dependency -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		
		 <!-- Hibernate -->
		<dependency>
		   <groupId>org.hibernate</groupId>
		   <artifactId>hibernate-core</artifactId>
		   <version>${hibernate.version}</version>
		</dependency>
		
		<dependency>
		   <groupId>org.hibernate</groupId>
		   <artifactId>hibernate-entitymanager</artifactId>
		   <version>${hibernate.version}</version>
		</dependency>
		
		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-context</artifactId>
		    <version>${org.springframework-version}</version>
		</dependency>
		<dependency>
           <groupId>org.springframework</groupId>
           <artifactId>spring-context-support</artifactId>
           <version>${org.springframework-version}</version>
		</dependency>
		
		<!-- Spring MVC -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-webmvc</artifactId>
		    <version>${org.springframework-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
		
		<!-- Spring Persistence -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-orm</artifactId>
		    <version>${org.springframework-version}</version>
		</dependency>
		
		<!-- I removed the version here because it is managed by the dependency management related to spring data modules above -->
		<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-jpa</artifactId>
<!-- 				<version>1.8.2.RELEASE</version> -->
		</dependency>
		
		<!-- Spring data mongo -->
		<!-- I removed the version here because it is managed by the dependency management related to spring data modules above -->
		<dependency>
        	<groupId>org.springframework.data</groupId>
        	<artifactId>spring-data-mongodb</artifactId>
    	</dependency>
		   
		   <!-- Transaction dependency is required with Quartz integration -->
		 <dependency>
		     <groupId>org.springframework</groupId>
		     <artifactId>spring-tx</artifactId>
		     <version>${org.springframework-version}</version>
		 </dependency>
		 
		 <!-- Spring Security -->
		  <dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		
		<!-- Spring Test -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework-version}</version>
			<scope>test</scope>
		</dependency>
		
		<!-- Bean Validation API -->
		<dependency>
    		<groupId>javax.validation</groupId>
    		<artifactId>validation-api</artifactId>
    		<version>1.1.0.Final</version>
		</dependency>
		
		<dependency>
    		<groupId>org.hibernate</groupId>
    		<artifactId>hibernate-validator</artifactId>
   		 	<version>5.3.0.Final</version>
		</dependency>
		
		
		<!-- 	MySQL Connector Java dependency (JDBC driver for MySQL): -->
		<dependency>
		    <groupId>mysql</groupId>
		    <artifactId>mysql-connector-java</artifactId>
		    <version>6.0.5</version>
		</dependency>
		  
		 <!-- Quartz framework -->
		   <dependency>
		       <groupId>org.quartz-scheduler</groupId>
		       <artifactId>quartz</artifactId>
		       <version>${quartz.version}</version>
		   </dependency>
		   
		<!-- For servlet  -->
		<dependency>
		    <groupId>javax.servlet</groupId>
		    <artifactId>javax.servlet-api</artifactId>
		    <version>3.1.0</version>
		    <scope>provided</scope>
		</dependency>
		<dependency>
		    <groupId>javax.servlet.jsp</groupId>
		    <artifactId>javax.servlet.jsp-api</artifactId>
		    <version>2.3.1</version>
		    <scope>provided</scope>
		</dependency>
		
		<!-- Tag lib -->
		<dependency>
		    <groupId>jstl</groupId>
		    <artifactId>jstl</artifactId>
		    <version>1.2</version>
		</dependency>
		
		<!-- Jackson JSON Mapper -->
			<dependency>
		        <groupId>org.codehaus.jackson</groupId>
		        <artifactId>jackson-mapper-asl</artifactId>
		        <version>1.9.13</version>
		    </dependency>
		    <dependency>
		        <groupId>com.fasterxml.jackson.core</groupId>
		        <artifactId>jackson-core</artifactId>
		        <version>2.4.1</version>
		    </dependency>
		    <dependency>
		        <groupId>com.fasterxml.jackson.core</groupId>
		        <artifactId>jackson-databind</artifactId>
		        <version>2.4.1.1</version>
		    </dependency>
		    
		<!--     Apache Commons DBCP dependency (for database connection pooling): -->
		    <dependency>
			    <groupId>org.apache.commons</groupId>
			    <artifactId>commons-dbcp2</artifactId>
			    <version>2.1.1</version>
			</dependency>
			
		<!-- log4j2 -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>2.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-web</artifactId>
			<version>2.2</version>
		</dependency>
		
<!-- 		<dependency> -->
<!-- 	        <groupId>org.slf4j</groupId> -->
<!-- 	        <artifactId>slf4j-log4j12</artifactId> -->
<!-- 	        <version>1.6.1</version> -->
<!-- 	    </dependency> -->
	    
	    <!-- Google CSE API -->
	    <dependency>
	      <groupId>com.google.apis</groupId>
	      <artifactId>google-api-services-customsearch</artifactId>
	      <version>v1-rev51-1.22.0</version>
	    </dependency>
	    
	    <!-- Commons Lang -->
	    <dependency>
	    	<groupId>org.apache.commons</groupId>
  			<artifactId>commons-lang3</artifactId>
  			<version>3.4</version>
	    </dependency>
	    
	    <!-- jsoup HTML parser library @ http://jsoup.org/ -->
	    <dependency>
		  <groupId>org.jsoup</groupId>
		  <artifactId>jsoup</artifactId>
		  <version>1.9.2</version>
		</dependency>
		
		<!-- Carrot2 dependency Clustering algorithms and document sources:  -->
		<dependency>
	  		<groupId>org.carrot2</groupId>
		  	<artifactId>carrot2-core</artifactId>
		  	<version>3.14.0</version>
		</dependency>
		
		<!-- CSV Parser -->
		<dependency>
			<groupId>com.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>3.8</version>
		</dependency>
		
		<!-- Added to resolve the exception when running a junit with spring, as it says: Unable to load blah blah -->
		<dependency>
		    <groupId>javax.el</groupId>
		    <artifactId>el-api</artifactId>
		    <version>2.2</version>
		</dependency>
		
		<!-- Weka API -->
		<dependency>
		    <groupId>nz.ac.waikato.cms.weka</groupId>
		    <artifactId>weka-stable</artifactId>
		    <version>3.8.0</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/nz.ac.waikato.cms.weka/classificationViaClustering -->
		<dependency>
		    <groupId>nz.ac.waikato.cms.weka</groupId>
		    <artifactId>classificationViaClustering</artifactId>
		    <version>1.0.3</version>
		    <exclusions>
		        <exclusion>  <!-- declare the exclusion here -->
			      <groupId>nz.ac.waikato.cms.weka</groupId>
			      <artifactId>weka-dev</artifactId>
		        </exclusion>
		      </exclusions> 
		</dependency>
		
		<!-- Jfree API -->
		<dependency>
		    <groupId>org.jfree</groupId>
		    <artifactId>jfreechart</artifactId>
		    <version>1.0.19</version>
		</dependency>
		
		<dependency>
		    <groupId>de.sven-jacobs</groupId>
		    <artifactId>loremipsum</artifactId>
		    <version>1.0</version>
		</dependency>
		
		<!-- Language detctor API (for a long text not per words) -->
<!-- 		<dependency> -->
<!-- 		    <groupId>com.optimaize.languagedetector</groupId> -->
<!-- 		    <artifactId>language-detector</artifactId> -->
<!-- 		    <version>0.6</version> -->
<!-- 		</dependency> -->
		
  </dependencies>
	<build>
<!--     <sourceDirectory>src</sourceDirectory> -->
<!--     <resources> -->
<!--     	<resource> -->
<!--     	<directory>resources</directory>  -->
<!--     	</resource> -->
<!--     </resources> -->
	<finalName>spread</finalName>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
      </plugin>
    </plugins>
  </build>
	
</project>